diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/field/SkyField.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/field/SkyField.java
index 571d4f4..fa74c20 100644
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/field/SkyField.java
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/field/SkyField.java
@@ -51,7 +51,7 @@ public class SkyField extends Field
     static final Point2d RDPE = new Point2d("RDPE",  14.0,  -39.0);
 
     static final Point2d RTP1 = new Point2d("RTP1", -34.5, -39.0); //R
-    static final Point2d RPP1 = new Point2d("RPP1",   7.0,  -39.0); //R
+    static final Point2d RPP1 = new Point2d("RPP1",   5.0, -39.0); //R
 
     //platch
     static final Point2d RBS1 = new Point2d( "RBS1", 36.0, -61.5);
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/field/SkyRoute.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/field/SkyRoute.java
index 886bf56..fccf9f2 100644
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/field/SkyRoute.java
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/field/SkyRoute.java
@@ -36,7 +36,7 @@ public class SkyRoute extends Route
         Segment.TargetType encType = Segment.TargetType.ENCODER;
         Segment.TargetType colType = Segment.TargetType.COLOR;
 
-        if(startPos == StartPos.START_1)
+        if(startPos == StartPos.START_1)  //MAIN AUTON - UNMOVED PLATFORM
         {
             points.add(SkyField.RLS1);
             addPoint(points, fwd, 0.60, 1.00, encType, scan, SkyField.RIS1);
@@ -44,10 +44,10 @@ public class SkyRoute extends Route
             addPoint(points, rev, 0.50, 1.00, encType, grab, SkyField.RGPA);
             addPoint(points, fwd, 0.80, 1.00, encType, drop, SkyField.RDPA);
             addPoint(points, rev, 0.80, 1.00, encType, grab, SkyField.RGPB);
-            addPoint(points, fwd, 0.80, 1.00, encType, drop, SkyField.RDPE);
+            addPoint(points, fwd, 0.80, 1.00, encType, drop, SkyField.RDPB);
             addPoint(points, rev, 0.80, 1.00, encType, park, SkyField.RPP1);
         }
-        else if(startPos == StartPos.START_2)
+        else if(startPos == StartPos.START_2)  //PLATCH AUTON
         {
             points.add(SkyField.RBS1);
             addPoint(points, fwd, 0.75, 1.00, encType, none, SkyField.RBP1);
@@ -57,7 +57,7 @@ public class SkyRoute extends Route
             addPoint(points, rev, 0.60, 1.00, encType, rtct, SkyField.RBP5);
             addPoint(points, rev, 0.50, 1.00, encType, park, SkyField.RBP6);
         }
-        else if(startPos == StartPos.START_3)
+        else if(startPos == StartPos.START_3)  //PLATFORM MOVED w/o turn
         {
             points.add(SkyField.RLS1);
             addPoint(points, fwd, 0.60, 1.00, encType, scan, SkyField.RIS1);
@@ -68,7 +68,7 @@ public class SkyRoute extends Route
             addPoint(points, fwd, 0.80, 1.00, encType, drop, SkyField.RDPC);
             addPoint(points, rev, 0.80, 1.00, encType, park, SkyField.RPP1);
         }
-        else if(startPos == StartPos.START_4)
+        else if(startPos == StartPos.START_4) //PLATFORM MOVED AND TURNED
         {
             points.add(SkyField.RLS1);
             addPoint(points, fwd, 0.60, 1.00, encType, scan, SkyField.RIS1);
@@ -80,7 +80,7 @@ public class SkyRoute extends Route
             addPoint(points, rev, 0.80, 1.00, encType, park, SkyField.RPP1);
         }
 
-        else if(startPos == StartPos.START_5)
+        else if(startPos == StartPos.START_5)  //JUST DROP IN ZONE
         {
             points.add(SkyField.RLS1);
             addPoint(points, fwd, 0.60, 1.00, encType, scan, SkyField.RIS1);
@@ -92,9 +92,7 @@ public class SkyRoute extends Route
             addPoint(points, rev, 0.80, 1.00, encType, park, SkyField.RPP1);
         }
 
-
-
-            return points;
+        return points;
     }
 
     public SkyRoute(PositionOption startPos,
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/opModes/SkyAutoShelby.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/opModes/SkyAutoShelby.java
index efba195..294ec10 100644
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/opModes/SkyAutoShelby.java
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/opModes/SkyAutoShelby.java
@@ -656,12 +656,12 @@ public class SkyAutoShelby extends InitLinearOpMode implements FtcMenu.MenuButto
         RobotLog.dd(TAG,"doGrab opengripper");
         skyBot.openGripper();
 
-        RobotLog.dd(TAG,"doGrab lift to GRAB, rot to Stone, extend to STAGE at " +
+        RobotLog.dd(TAG,"doGrab lift to GRAB, rot to Stone, extend to SNUG at " +
                 startTimer.seconds());
 
         skyBot.moveArmToLoc(skyBot.LIFT_GRAB_CNTS,
                 getArmGrabRot(),
-                skyBot.ARM_EXT_STAGE_POS);
+                skyBot.ARM_EXT_SNUG_POS);
 
         RobotLog.dd(TAG,"doGrab lift to GRAB, rot to Stone, extend to GRAB at " +
                 startTimer.seconds());
@@ -690,19 +690,6 @@ public class SkyAutoShelby extends InitLinearOpMode implements FtcMenu.MenuButto
                 skyBot.ARM_ROT_FWD,
                 skyBot.ARM_EXT_STAGE_POS);
 
-        RobotLog.dd(TAG,"doGrab threaded lift to MOVE, rot to FWD, extend to SNUG at " +
-                startTimer.seconds());
-        MoveArmTask tsk = new MoveArmTask();
-        tsk.setElevPos(skyBot.LIFT_MOVE_CNTS);
-        tsk.setArotPos(skyBot.ARM_ROT_FWD);
-        tsk.setXtndPos(skyBot.ARM_EXT_SNUG_POS);
-        tsk.setElevDly(0.0);
-        tsk.setXtndDly(0.0);
-        tsk.setArotDly(0.0);
-        tsk.setAutoCross(false);
-        tsk.setAutoX(0.0);
-        es.submit(tsk);
-
         Segment nxtSeg = pathSegs.get(segIdx+1);
         Segment.Action nxtAct = nxtSeg.getAction();
         if(nxtAct == Segment.Action.DROP)
@@ -712,7 +699,7 @@ public class SkyAutoShelby extends InitLinearOpMode implements FtcMenu.MenuButto
             crossTsk.setXtndDly(skyBot.ARM_EXT_DROP_POS);
             crossTsk.setArotPos(getArmDropRot());
             crossTsk.setAutoCross(true);
-            crossTsk.setAutoX(9.0);
+            crossTsk.setAutoX(10.0);
             es.submit(crossTsk);
         }
     }
@@ -746,21 +733,36 @@ public class SkyAutoShelby extends InitLinearOpMode implements FtcMenu.MenuButto
         void setArotDly(double dly) {this.arotDly = dly;}
         void setAutoCross(boolean autoCross) {this.autoCross = autoCross;}
         void setAutoX  (double x)   {this.autoX = x;}
+        volatile boolean getOut = false;
 
         public void run()
         {
             double startX = drvTrn.getEstPos().getX();
             double curX = startX;
+
             if(autoCross)
             {
-                while((startX < 0.0 && curX < autoX) || (startX > 0.0 && curX > autoX))
+                RobotLog.dd(TAG, "Delaying threaded arm move. startx=" + startX);
+                while(!getOut && (startX < 0.0 && curX < autoX) || (startX > 0.0 && curX > autoX))
                 {
-                    sleep(20);
+                    RobotLog.dd(TAG, "Delaying threaded arm move. curx=" + curX);
+                    try
+                    {
+                        Thread.sleep(20);
+                    }
+                    catch (InterruptedException ie)
+                    {
+                        getOut = true;
+                    }
                     curX = drvTrn.getEstPos().getX();
                 }
             }
-            RobotLog.dd(TAG, "Starting Threaded Arm Move");
-            skyBot.moveArmToLoc(elevPos, arotPos, xtndPos, elevDly, arotDly, xtndDly);
+
+            if(!getOut)
+            {
+                RobotLog.dd(TAG, "Starting Threaded Arm Move");
+                skyBot.moveArmToLoc(elevPos, arotPos, xtndPos, elevDly, arotDly, xtndDly);
+            }
         }
     }
 
@@ -774,22 +776,7 @@ public class SkyAutoShelby extends InitLinearOpMode implements FtcMenu.MenuButto
             return;
         }
 
-        double rotPos = 0.0;
-        if(alliance == Field.Alliance.BLUE)
-        {
-            if(startPos == Route.StartPos.START_1)      rotPos = skyBot.ARM_ROT_RGT;
-            else if(startPos == Route.StartPos.START_3) rotPos = skyBot.ARM_DRP_LFT;
-            else if(startPos == Route.StartPos.START_4) rotPos = skyBot.ARM_ROT_FWD;
-            else if(startPos == Route.StartPos.START_5) rotPos = skyBot.ARM_ROT_FWD;
-
-        }
-        else
-        {
-            if(startPos == Route.StartPos.START_1)      rotPos = skyBot.ARM_ROT_LFT;
-            else if(startPos == Route.StartPos.START_3) rotPos = skyBot.ARM_DRP_RGT;
-            else if(startPos == Route.StartPos.START_4) rotPos = skyBot.ARM_ROT_FWD;
-            else if(startPos == Route.StartPos.START_5) rotPos = skyBot.ARM_ROT_FWD;
-        }
+        double rotPos = getArmDropRot();
 
         skyBot.moveArmToLoc(skyBot.LIFT_STOW_CNTS, rotPos, skyBot.ARM_EXT_DROP_POS, 0, 0.2, 0);
     }
@@ -806,8 +793,7 @@ public class SkyAutoShelby extends InitLinearOpMode implements FtcMenu.MenuButto
             return;
         }
 
-        //early out on start1 - remove this when we have enough time
-        if(startPos == Route.StartPos.START_1 && grabNum == 2)
+        if(startPos == Route.StartPos.START_5)
         {
             skyBot.openGripper();
             return;
@@ -828,7 +814,8 @@ public class SkyAutoShelby extends InitLinearOpMode implements FtcMenu.MenuButto
 
         skyBot.moveArmToLoc(skyBot.LIFT_MOVE_CNTS, skyBot.ARM_ROT_FWD, skyBot.ARM_EXT_DROP_POS, 0, 0.0, 0);
 
-        if(grabNum == 2) {
+        if(grabNum == 2)
+        {
             RobotLog.dd(TAG, "doGrab threaded lift to MOVE, rot to FWD, extend to SNUG at " +
                     startTimer.seconds());
             MoveArmTask tsk = new MoveArmTask();
@@ -840,20 +827,22 @@ public class SkyAutoShelby extends InitLinearOpMode implements FtcMenu.MenuButto
             tsk.setArotDly(0.0);
             es.submit(tsk);
         }
-
-        Segment nxtSeg = pathSegs.get(segIdx+1);
-        Segment.Action nxtAct = nxtSeg.getAction();
-        if(nxtAct == Segment.Action.GRAB)
+        else
         {
-            RobotLog.dd(TAG, "doGrab threaded auto lift to STOW, rot to STN, extend to SNUG at " +
-                    startTimer.seconds());
-            MoveArmTask crossTsk = new MoveArmTask();
-            crossTsk.setElevPos(skyBot.LIFT_STOW_CNTS);
-            crossTsk.setXtndDly(skyBot.ARM_EXT_SNUG_POS);
-            crossTsk.setArotPos(getArmGrabRot());
-            crossTsk.setAutoCross(true);
-            crossTsk.setAutoX(-12.0);
-            es.submit(crossTsk);
+
+            Segment nxtSeg = pathSegs.get(segIdx + 1);
+            Segment.Action nxtAct = nxtSeg.getAction();
+            if (nxtAct == Segment.Action.GRAB) {
+                RobotLog.dd(TAG, "doGrab threaded auto lift to STOW, rot to STN, extend to SNUG at " +
+                        startTimer.seconds());
+                MoveArmTask crossTsk = new MoveArmTask();
+                crossTsk.setElevPos(skyBot.LIFT_STOW_CNTS);
+                crossTsk.setXtndDly(skyBot.ARM_EXT_SNUG_POS);
+                crossTsk.setArotPos(getArmGrabRot());
+                crossTsk.setAutoCross(true);
+                crossTsk.setAutoX(-18.0);
+                es.submit(crossTsk);
+            }
         }
     }
 
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/robot/SkyBot.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/robot/SkyBot.java
index d3b1df3..00b7f89 100644
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/robot/SkyBot.java
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/robot/SkyBot.java
@@ -304,7 +304,7 @@ public class SkyBot extends TilerunnerGtoBot {
             if (!lastExtndUseCnts)
             {
                 RobotLog.dd(TAG, "Moving to arm pos %d %f",
-                        curArmCounts, curArmCounts/ARMROT_CPD);
+                        curArmCounts, curArmCounts/EXTND_CPI);
                 armExtend.setTargetPosition(curArmCounts);
                 armExtend.setMode(DcMotor.RunMode.RUN_TO_POSITION);
                 armExtend.setPower(aspd);
@@ -343,7 +343,7 @@ public class SkyBot extends TilerunnerGtoBot {
 
         double armExtSpd = 0.95;
         if(targetPos < curPos) armExtSpd = -armExtSpd;
-        else if (Math.abs(targetPos - curPos) < EXTND_CPI) armExtSpd = 0.0;
+        else if (Math.abs(targetPos - curPos) < EXT_THRESH) armExtSpd = 0.0;
 
         armExtend.setPower(armExtSpd);
     }
@@ -368,7 +368,7 @@ public class SkyBot extends TilerunnerGtoBot {
             RobotLog.dd(TAG, "In armExtend.  targetpos=" + targetPos + " curPos=" +
                     curPos);
 
-            if(Math.abs(armExtend.getCurrentPosition() - targetPos) < LIFTER_THRESH)
+            if(Math.abs(armExtend.getCurrentPosition() - targetPos) < EXT_THRESH)
             {
                 armExtend.setPower(0.2);
                 armExtend.setTargetPosition(targetPos);
@@ -376,7 +376,7 @@ public class SkyBot extends TilerunnerGtoBot {
             }
             curPos = armExtend.getCurrentPosition();
         }
-        armExtend.setPower(0.0);
+        armExtend.setPower(0.2);
         armExtend.setMode(DcMotor.RunMode.RUN_TO_POSITION);
     }
 
@@ -557,7 +557,7 @@ public class SkyBot extends TilerunnerGtoBot {
 
         double liftSpd = 0.95;
         if(targetPos - curPos < 0) liftSpd = -liftSpd;
-        else if (Math.abs(targetPos - curPos) < LIFTER_CPI) liftSpd = 0.0;
+        else if (Math.abs(targetPos - curPos) < LIFTER_THRESH) liftSpd = 0.0;
 
         _liftyBoi.setPower(liftSpd);
     }
@@ -671,8 +671,8 @@ public class SkyBot extends TilerunnerGtoBot {
         ElapsedTime liftTimer = new ElapsedTime();
         ElapsedTime rotTimer = new ElapsedTime();
 
-        double extendTimeout = 4.0;
-        double liftTimeLimit = 4.0;
+        double extendTimeout = 2.5;
+        double liftTimeLimit = 2.5;
 
         int curExtPos = armExtend.getCurrentPosition();
         int curLiftPos = _liftyBoi.getCurrentPosition();
@@ -759,6 +759,7 @@ public class SkyBot extends TilerunnerGtoBot {
                     arotCompleteTime = rotTimer.seconds();
                     RobotLog.dd(TAG, "Completed rotate in " + arotCompleteTime + "s");
                     arotDone = true;
+                    armRotate.setMode(DcMotor.RunMode.RUN_TO_POSITION);
                 }
                 else
                 {
